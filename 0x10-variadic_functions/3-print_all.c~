#include "variadic_functions.h"
#include <stdio.h>
#include <stdarg.h>

/**
 *print_all - mini printf function
 *@format: format specifiers
 */

void print_all(const char * const format, ...)
{
	formatter f[] = {
		{'c', print_char},
		{'i', print_int},
		{'f', print_float},
		{'s', print_string},
		{'\0', NULL}};

	int i = 0, j;
	char *separator = "";
	va_list arg;
	va_start(arg, format);

	if (format == NULL)
		return;
	while (format[i] != '\0')
	{
		j = 0;
		while (f[j].str)
		{
		if (f[j].str == format[i])
		{
			printf("%s", separator);
			f[j].print(arg);
			separator = ", ";
			break;
		}
		j++;
		}
		i++;
	}
	printf("\n");
	va_end(arg);
}

void print_char(va_list arg)
{
	printf("%c", va_arg(arg, int));
}

void print_int(va_list arg)
{
	printf("%d", va_arg(arg, int));
}

void print_float(va_list arg)
{
	printf("%f", va_arg(arg, double));
}

void print_string(va_list arg)
{
	char *str = va_arg(arg, char *);
	if (str == NULL)
	{
		printf("(nil)");
		return;
	}
	printf("%s", str);
}
